feh - Imlib2 based image viewer
-------------------------------

 * <http://feh.finalrewind.org/>
 * <http://linuxbrit.co.uk/feh/>
 * #feh on irc.oftc.net

Dependencies
------------

 * Imlib2
 * libcurl (disable with make curl=0)
 * libpng
 * libX11
 * libXinerama (disable with make xinerama=0)

If built with exif=1:

 * libexif-dev
 * libexif12

Recommended
-----------

 * jpegtran  (supplied by the jpeg library, for lossless image rotation)
 * convert  (supplied by ImageMagick, can be used to load unsupported formats)

Installation
------------

$ make
$ sudo make install

ZSH Completion for feh is available at
<http://git.finalrewind.org/zsh/plain/etc/completions/_feh>

Make flags
----------

Use "make flag=bool", e.g. "make xinerama=0 debug=1" to disable Xinerama
support and get a debug build.

Available flags are:

 * cam      (default 0) - install deprecated feh-cam und gen-cam-menu scripts
 * curl     (default 1) - use libcurl to view http:// and similar images
 * debug    (default 0) - debug build, enables --debug
 * exif     (default 0) - Builtin EXIF tag display support
 * help     (default 0) - include help text (refers to the manpage otherwise)
 * stat64   (default 0) - Support CIFS shares from 64bit hosts on 32bit machines
 * xinerama (default 1) - Support Xinerama/XRandR multiscreen setups

So, by default libcurl and Xinerama are enabled, the rest is disabled.

Note: config.mk is designed so that in most cases, you can set environment
variables instead of editing it. E.g.:
CFLAGS='-g -Os' make
export DESTDIR=/tmp/feh PREFIX=/usr; make && make install

Builtin EXIF support is maintained by Dennis Real, see
<https://github.com/reald/feh>.


Testing (non-X)
---------------

$ make test

Requires perl >= 5.10 with Test::Command. The tests are non-interactive and
work without X, so they can safely be run even on a headless buildserver.


Testing (X)
-----------

Requires
 * import (usually supplied by imagemagick)
 * perl >= 5.10 with GD, Test::More and X11::GUITest
 * twm
 * Xephyr

$ make test-x11

Be aware that this is quite experimental, so far the X-tests have only been
run on one machine. So they may or may not work for you.

Docker Build
------------

feh includes a Dockerfile which will install all of the dependencies for
compiling feh in a Docker image if desired.

To build feh inside of Docker, you can use the following commands:

$ docker build -t feh .
$ docker run feh

Then feh can be installed on your local system with the usual "sudo make
install".
